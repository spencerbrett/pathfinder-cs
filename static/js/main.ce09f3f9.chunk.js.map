{"version":3,"sources":["constants.js","main/mainSlice.js","utils.js","main/CharacterSummary.js","main/Attributes.js","main/Main.js","Routes.js","combat/Combat.js","components/Navigation.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["ATTR","mainSlice","createSlice","name","initialState","characterSummary","characterName","heroPoints","level","ancestry","background","playerClass","traits","attributes","key","score","reducers","updateCharacterSummary","state","action","payload","updateAttributes","Object","entries","forEach","attr","Number","selectCharacterSummary","main","selectAttributes","selectAttrModifiers","createSelector","reduce","acc","Math","floor","ceil","actions","reducer","useStyles","makeStyles","theme","root","padding","spacing","flexGrow","width","CharacterSummary","dispatch","useDispatch","useSelector","useForm","defaultValues","handleSubmit","register","classes","onSubmit","data","Paper","className","Grid","container","item","xs","sm","TextField","id","label","size","margin","fullWidth","onBlur","inputRef","md","variant","table","minWidth","field","Attributes","modifiers","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","index","modifier","bonus","undefined","scope","disabled","value","Main","Routes","path","sidebarName","iconComponent","PersonRounded","SportsMma","justify","display","drawer","flexShrink","whiteSpace","menuButton","marginRight","toolbar","alignItems","justifyContent","mixins","content","Navigation","children","location","useLocation","history","useHistory","useState","open","setOpen","activeRoute","route","pathname","handleNavItemClick","push","handleDrawerOpen","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","color","onClick","edge","Typography","noWrap","SwipeableDrawer","anchor","onOpen","onClose","MenuList","MenuItem","selected","button","ListItemIcon","ListItemText","primary","App","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","mainReducer","ReactDOM","render","StrictMode","baseline","document","getElementById"],"mappings":"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","file":"static/js/main.ce09f3f9.chunk.js","sourcesContent":["\n\nexport const ATTR = {\n    Strength: \"str\",\n    Dexterity: \"dex\",\n    Constitution: \"con\",\n    Intelligence: \"int\",\n    Wisdom: \"wis\",\n    Charisma: \"cha\"\n};","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { ATTR } from '../constants';\nimport { getModifier } from '../utils';\n\nconst mainSlice = createSlice({\n    name: 'main',\n    initialState: {\n        characterSummary: {\n            characterName: \"\",\n            heroPoints: 0,\n            level: 1,\n            ancestry: \"\",\n            background: \"\",\n            playerClass: \"\",\n            traits: \"\"\n        },\n        attributes: [\n            {\n                key: ATTR.Strength,\n                name: \"Strength\",\n                score: 10\n            },\n            {\n                key: ATTR.Dexterity,\n                name: \"Dexterity\",\n                score: 10\n            },\n            {\n                key: ATTR.Constitution,\n                name: \"Constitution\",\n                score: 10\n            },\n            {\n                key: ATTR.Intelligence,\n                name: \"Intelligence\",\n                score: 10\n            },\n            {\n                key: ATTR.Wisdom,\n                name: \"Wisdom\",\n                score: 10\n            },\n            {\n                key: ATTR.Charisma,\n                name: \"Charisma\",\n                score: 10\n            }\n        ]\n    },\n    reducers: {\n        updateCharacterSummary(state, action) {\n            state.characterSummary = action.payload;\n            return state;\n        },\n        updateAttributes(state, action) {\n            Object.entries(action.payload).forEach(([key, attr]) => {\n                state.attributes[key].score = Number(attr.score);\n            });\n            return state;\n        }\n    }\n});\n\n// Create and export selectors\nexport const selectCharacterSummary = state => state.main.characterSummary;\nexport const selectAttributes = state => state.main.attributes;\nexport const selectAttrModifiers = createSelector(selectAttributes, attributes => attributes.reduce((acc, attr) => {\n    acc[attr.key] = getModifier(attr.score);\n    return acc;\n}, {}))\n\n// Extract the action creators object and the reducer\nconst { actions, reducer } = mainSlice;\n// Extract and export each action creator by name\nexport const { updateCharacterSummary, updateAttributes } = actions;\n// Export the reducer, either as a default or named export\nexport default reducer;","export const getModifier = (score) => score > 10 ? Math.floor((score - 10) / 2) : Math.ceil((score - 10) / 2);\n","import React from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { Grid, makeStyles, Paper, TextField } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCharacterSummary, updateCharacterSummary } from './mainSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        flexGrow: 1\n    },\n    level: {\n        width: theme.spacing(6)\n    },\n    heroPoints: {\n        width: theme.spacing(11)\n    }\n}));\nexport const CharacterSummary = () => {\n    const dispatch = useDispatch();\n    const characterSummary = useSelector(selectCharacterSummary);\n    const { handleSubmit, register } = useForm({\n        defaultValues: characterSummary\n    });\n    const classes = useStyles();\n\n    const onSubmit = (data) => {\n        dispatch(updateCharacterSummary(data));\n    };\n    return (\n        <Paper className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={10} sm={6}>\n                    <TextField id=\"characterName\" name=\"characterName\" label=\"Name\" size=\"small\" margin=\"dense\" fullWidth\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n                <Grid item xs={2} md={1}>\n                    <TextField id=\"level\" name=\"level\" label=\"Level\" className={classes.level} margin=\"dense\" size=\"small\"\n                               variant=\"outlined\"\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField id=\"heroPoints\" name=\"heroPoints\" label=\"Hero Points\" className={classes.heroPoints} margin=\"dense\"\n                               size=\"small\" variant=\"outlined\"\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n\n                <Grid item xs={4} sm={5}>\n                    <TextField id=\"ancestry\" name=\"ancestry\" label=\"Ancestry\" margin=\"dense\" size=\"small\" fullWidth\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n                <Grid item xs={4} sm={5}>\n                    <TextField id=\"background\" name=\"background\" label=\"Background\" margin=\"dense\" size=\"small\" fullWidth\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n                <Grid item xs={5}>\n                    <TextField id=\"playerClass\" name=\"playerClass\" label=\"Class\" margin=\"dense\" size=\"small\" fullWidth\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n                <Grid item xs={7}>\n                    <TextField id=\"traits\" name=\"traits\" label=\"Traits\" margin=\"dense\" size=\"small\" fullWidth\n                               onBlur={handleSubmit(onSubmit)}\n                               inputRef={register}/>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};","import React from \"react\";\nimport { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAttributes, selectAttrModifiers, updateAttributes } from './mainSlice';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        flexGrow: 1\n    },\n    table: {\n        minWidth: 240\n    },\n    field: {\n        width: theme.spacing(8)\n    }\n}));\nexport const Attributes = () => {\n    const dispatch = useDispatch();\n    const attributes = useSelector(selectAttributes);\n    const modifiers = useSelector(selectAttrModifiers);\n    const classes = useStyles();\n    const { handleSubmit, register } = useForm({\n        defaultValues: attributes\n    });\n\n    const onSubmit = (data) => {\n        dispatch(updateAttributes(data));\n    };\n\n    return (\n        <TableContainer component={Paper} className={classes.root}>\n            <Table aria-label=\"attributes\" className={classes.table} size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell/>\n                        <TableCell align=\"right\">Score</TableCell>\n                        <TableCell align=\"right\">Misc +/-</TableCell>\n                        <TableCell align=\"right\">Bonus</TableCell>\n                        <TableCell align=\"right\">Dmg</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {attributes.map((attr, index) => {\n                        const { key, name } = attr;\n                        const modifier = modifiers[key];\n                        const bonus = modifier === 0 ? undefined : modifier > 0 ? `+${modifier}` : modifier;\n                        return (\n                            <TableRow key={key}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {name}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <TextField id={key} name={`[${index}].score`} className={classes.field} margin=\"dense\" size=\"small\"\n                                               variant=\"outlined\" onBlur={handleSubmit(onSubmit)} inputRef={register}/>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <TextField className={classes.field} margin=\"dense\" size=\"small\" disabled variant=\"filled\"/>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <TextField className={classes.field} margin=\"dense\" size=\"small\" disabled value={bonus}\n                                               variant=\"outlined\"/>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <TextField className={classes.field} margin=\"dense\" size=\"small\" disabled variant=\"filled\"/>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};","import React from 'react';\nimport { CharacterSummary } from './CharacterSummary';\nimport { Grid } from '@material-ui/core';\nimport { Attributes } from './Attributes';\n\nexport const Main = () => {\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <CharacterSummary />\n            </Grid>\n            <Grid item xs={12} md={8}>\n                <Attributes />\n            </Grid>\n        </Grid>\n    );\n};","import { Main } from './main/Main';\nimport { PersonRounded, SportsMma } from '@material-ui/icons';\nimport { Combat } from './combat/Combat';\n\nconst Routes = [\n    {\n        path: '/',\n        sidebarName: 'Main',\n        iconComponent: PersonRounded,\n        component: Main\n    },\n    {\n        path: '/combat',\n        sidebarName: 'Combat',\n        iconComponent: SportsMma,\n        component: Combat\n    }\n];\n\nexport default Routes;","import React from \"react\";\nimport { Grid } from '@material-ui/core';\n\nexport const Combat = () => {\n    return (\n        <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item>\n                Strength Modifier\n            </Grid>\n            <Grid item>\n                Strength Score\n            </Grid>\n        </Grid>\n    );\n};","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { MenuItem, MenuList, SwipeableDrawer } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router';\nimport Routes from '../Routes';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n        whiteSpace: 'nowrap'\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nexport const Navigation = ({ children }) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const history = useHistory();\n    const [open, setOpen] = useState(false);\n\n    const activeRoute = (route) => {\n        return location.pathname === route.path;\n    };\n\n    const handleNavItemClick = route => () => {\n        history.push(route.path);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Pathfinder Character Sheet\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <SwipeableDrawer\n                anchor=\"left\"\n                open={open}\n                onOpen={handleDrawerOpen}\n                onClose={handleDrawerClose}\n            >\n                <div className={classes.toolbar}/>\n                <MenuList>\n                    {Routes.map((route, index) => (\n                        <MenuItem selected={activeRoute(route)} button onClick={handleNavItemClick(route)} key={index}>\n                            <ListItemIcon>\n                                <route.iconComponent/>\n                            </ListItemIcon>\n                            <ListItemText primary={route.sidebarName}/>\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </SwipeableDrawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                {children}\n            </main>\n        </div>\n    );\n};\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { Main } from './main/Main';\nimport { Navigation } from './components/Navigation';\nimport { Switch } from 'react-router-dom';\nimport Routes from './Routes';\nimport { Route } from 'react-router';\n\nfunction App() {\n    return (\n        <>\n            <CssBaseline/>\n            <Navigation>\n                <Switch>\n                    {Routes.map((route) =>\n                        <Route exact path={route.path} key={route.path}>\n                            <route.component/>\n                        </Route>)}\n                    <Main/>\n                </Switch>\n            </Navigation>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mainReducer from './main/mainSlice';\n\nexport const store = configureStore({\n    reducer: {\n        main: mainReducer\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter baseline=\"/\">\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}