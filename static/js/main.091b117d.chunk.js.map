{"version":3,"sources":["profile/profileSlice.js","profile/Profile.js","Routes.js","abilityScores/AbilityScores.js","components/Navigation.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["profileSlice","createSlice","name","initialState","characterName","playerName","experience","ancestryHeritage","background","playerClass","size","alignment","traits","deity","reducers","updateProfile","state","action","payload","selectProfile","profile","actions","reducer","useStyles","makeStyles","theme","root","padding","spacing","flexGrow","paper","textAlign","color","palette","text","secondary","textField","paddingLeft","Profile","dispatch","useDispatch","useSelector","useForm","defaultValues","register","handleSubmit","classes","onSubmit","data","noValidate","autoComplete","Grid","container","className","item","xs","sm","TextField","id","label","fullWidth","inputRef","md","Button","type","variant","Routes","path","sidebarName","iconComponent","PersonRounded","component","BallotRounded","justify","drawerWidth","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","Navigation","children","location","useLocation","history","useHistory","useState","open","setOpen","activeRoute","route","pathname","handleNavItemClick","push","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","noWrap","Drawer","Divider","MenuList","map","index","MenuItem","selected","button","ListItemIcon","ListItemText","primary","App","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","profileReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.091b117d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst profileSlice = createSlice({\n    name: 'profile',\n    initialState: {\n        characterName: \"\",\n        playerName: \"\",\n        experience: \"\",\n        ancestryHeritage: \"\",\n        background: \"\",\n        playerClass: \"\",\n        size: \"\",\n        alignment: \"\",\n        traits: \"\",\n        deity: \"\"\n    },\n    reducers: {\n        updateProfile(state, action) {\n            state = action.payload;\n            return state;\n        }\n    }\n});\n\n// Create and export selectors\nexport const selectProfile = state => state.profile;\n\n// Extract the action creators object and the reducer\nconst { actions, reducer } = profileSlice;\n// Extract and export each action creator by name\nexport const { updateProfile } = actions;\n// Export the reducer, either as a default or named export\nexport default reducer;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\nimport { Button, Grid, makeStyles } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectProfile, updateProfile } from './profileSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary\n    },\n    textField: {\n        paddingLeft: theme.spacing(1)\n    }\n}));\nexport const Profile = () => {\n    const dispatch = useDispatch();\n    const profile = useSelector(selectProfile);\n    const { register, handleSubmit } = useForm({\n        defaultValues: profile\n    });\n    const classes = useStyles();\n\n    const onSubmit = (data) => {\n        dispatch(updateProfile(data));\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\n            <Grid container className={classes.root} spacing={2}>\n                <Grid container item xs={12} sm={6}>\n                    <Grid item xs={12} className={classes.textField}>\n                        <TextField id=\"characterName\" name=\"characterName\" label=\"Character Name\" size=\"small\" fullWidth inputRef={register}/>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={12} md={6} className={classes.textField}>\n                            <TextField id=\"playerName\" name=\"playerName\" label=\"Player name\" size=\"small\" fullWidth inputRef={register}/>\n                        </Grid>\n                        <Grid item xs={12} md={6} className={classes.textField}>\n                            <TextField id=\"experience\" name=\"experience\" label=\"Experience Points (XP)\" size=\"small\" fullWidth inputRef={register}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container item xs={12} sm={6}>\n                    <Grid item xs={12} className={classes.textField}>\n                        <TextField id=\"ancestryHeritage\" name=\"ancestryHeritage\" label=\"Ancestry and Heritage\" size=\"small\" fullWidth inputRef={register}/>\n                    </Grid>\n                    <Grid item xs={12} className={classes.textField}>\n                        <TextField id=\"background\" name=\"background\" label=\"Background\" inputRef={register} size=\"small\" fullWidth/>\n                    </Grid>\n                    <Grid item xs={12} className={classes.textField}>\n                        <TextField id=\"playerClass\" name=\"playerClass\" label=\"Class\" inputRef={register} size=\"small\" fullWidth/>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={6} sm={2} className={classes.textField}>\n                            <TextField id=\"size\" name=\"size\" label=\"Size\" inputRef={register} size=\"small\" fullWidth/>\n                        </Grid>\n                        <Grid item xs={6} sm={4} className={classes.textField}>\n                            <TextField id=\"alignment\" name=\"alignment\" label=\"Alignment\" inputRef={register} size=\"small\" fullWidth/>\n                        </Grid>\n                        <Grid item xs={12} sm={6} className={classes.textField}>\n                            <TextField id=\"traits\" name=\"traits\" label=\"Traits\" inputRef={register} size=\"small\" fullWidth/>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className={classes.textField}>\n                        <TextField id=\"deity\" name=\"deity\" label=\"Deity\" inputRef={register} size=\"small\" fullWidth/>\n                    </Grid>\n                </Grid>\n                <Grid container item xs={12} >\n                    <Button type=\"submit\" size=\"large\" color=\"primary\" variant=\"contained\">Save</Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};","import { Profile } from './profile/Profile';\nimport { PersonRounded, BallotRounded } from '@material-ui/icons';\nimport { AbilityScores } from './abilityScores/AbilityScores';\n\nconst Routes = [\n    {\n        path: '/',\n        sidebarName: 'Profile',\n        iconComponent: PersonRounded,\n        component: Profile\n    },\n    {\n        path: '/abilities',\n        sidebarName: 'Ability Scores',\n        iconComponent: BallotRounded,\n        component: AbilityScores\n    }\n];\n\nexport default Routes;","import React from \"react\";\nimport { Grid } from '@material-ui/core';\n\nexport const AbilityScores = () => {\n    return (\n        <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item>\n                Strength Modifier\n            </Grid>\n            <Grid item>\n                Strength Score\n            </Grid>\n        </Grid>\n    );\n};","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { MenuItem, MenuList } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router';\nimport Routes from '../Routes';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: 'none'\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nexport const Navigation = ({ children }) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const history = useHistory();\n    const [open, setOpen] = useState(false);\n\n    const activeRoute = (route) => {\n        return location.pathname === route.path;\n    };\n\n    const handleNavItemClick = route => () => {\n        history.push(route.path);\n    }\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Pathfinder Character Sheet\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                </div>\n                <Divider/>\n                <MenuList>\n                    {Routes.map((route, index) => (\n                        <MenuItem selected={activeRoute(route)} button onClick={handleNavItemClick(route)} key={index}>\n                            <ListItemIcon><route.iconComponent /></ListItemIcon>\n                            <ListItemText primary={route.sidebarName}/>\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                {children}\n            </main>\n        </div>\n    );\n};\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { Profile } from './profile/Profile';\nimport { Navigation } from './components/Navigation';\nimport { Switch } from 'react-router-dom';\nimport Routes from './Routes';\nimport { Route } from 'react-router';\n\nfunction App() {\n    return (\n        <>\n            <CssBaseline/>\n            <Navigation>\n                <Switch>\n                    {Routes.map((route) =>\n                        <Route exact path={route.path} key={route.path}>\n                            <route.component/>\n                        </Route>)}\n                    <Profile/>\n                </Switch>\n            </Navigation>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport profileReducer from './profile/profileSlice';\n\nexport const store = configureStore({\n    reducer: {\n        profile: profileReducer\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}